svm_model <- svm(d ~ ., p2ab)
plot(p2ab)
plot(p2ab, type="scatter")
scatter.smooth(p2ab)
library(ggplot2)
ggplot(data2graph,aes(x=a3,y=season, color=season)) + geom_point() + facet_wrap(~ minO2) + guides(color=FALSE)
p2ab <- p2data[,1:2,4]
ggplot(p2ab,aes(x=a,y=b, color=d)) + geom_point() + guides(color=FALSE)
ggplot(p2ab,aes(x=b,y=a, color=d)) + geom_point() + guides(color=FALSE)
t1 <- rpartXse(d ~., p2ab)
scatter.smooth(p2ab)
svm_model <- svm(d ~ ., p2ab)
ps <- predict(svm_model, p2data)
(cm <- table(ps, p2data$d))
svm_model <- svm(d ~ ., p2data)
ps <- predict(svm_model, p2data)
(cm <- table(ps, p2data$d))
svm_model <- svm(d ~ ., p2data, kernel='linear')
r <- svm_model$rho
r
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm.model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
w <- t(svm_model$coefs) %*% svm.model$SV
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
library(DMwR2)
library(rpart.plot)
library(e1071)
library(ggplot2)
set.seed(1234)
p2ab <- p2data[,1:2,4]
ggplot(p2ab,aes(x=b,y=a, color=d)) + geom_point() + guides(color=FALSE)
svm_model <- svm(d ~ ., p2data, kernel='linear')
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
library(DMwR2)
library(rpart.plot)
library(e1071)
library(ggplot2)
set.seed(1234)
p2ab <- p2data[,1:2,4]
ggplot(p2ab,aes(x=b,y=a, color=d)) + geom_point() + guides(color=FALSE)
svm_model <- svm(d ~ ., p2data, kernel='linear')
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
svm_model <- svm(d ~ ., p2data, kernel='linear')
plot(p2ab)
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
abline(a=--b/p[1,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
abline(a=--b/p[3,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
svm_model <- svm(d ~ ., p2data, kernel='linear')
plot(p2ab)
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
abline(a=(-b-1)/w[1,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
abline(a=(-b+1)/w[1,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
ggplot(p2ab,aes(x=b,y=a, color=d)) + geom_point() + guides(color=FALSE)
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
plot(p2data[,-3],col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
plot(p2data[,-4],col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
points(p2data[svm.model$index,c(1,2)],col="blue",cex=2)
points(p2data[svm_model$index,c(1,2)],col="blue",cex=2)
plot(p2data[,-4],col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
points(p2data[svm_model$index,c(1,2)],col="blue",cex=2)
plot(p2data[,-4],col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
points(p2data[svm_model$index,c(1,2)],col="blue",cex=2)
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
abline(a=(-b-1)/w[1,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
abline(a=(-b+1)/w[1,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
plot(p2data[,-4],col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
points(p2data[svm_model$index,c(1,2)],col="blue",cex=2)
r <- svm_model$rho
w <- t(svm_model$coefs) %*% svm_model$SV
p <- svm_model$SV
abline(a=-b/w[1,2], b=-w[1,1]/w[1,2], col="black", lty=1)
abline(a=(-b-1)/w[1,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
abline(a=(-b+1)/w[1,2], b=-w[1,1]/w[1,2], col="orange", lty=3)
plot(p2data[,-4],col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
plot(svm_model[,-4],col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
plot(svm_model,col=(a+3)/2, pch=19, xlim=c(-1,6), ylim=c(-1,6))
ggplot(p2ab,aes(x=b,y=a, color=d)) + geom_point() + guides(color=FALSE)
library(rpart.plot)
tree <- rpartXse(d ~ ., p2data)
prp(tree, type=0, extra=101)
tree <- rpartXse(d ~ ., p2data)
prp(tree, type=0, extra=101)
2/5
TID <- c(1, 2, 3, 4, 5)
TID <- c(1, 2, 3, 4, 5)
Lhat <- c(1, 1, 0, 1, 0)
p5data <- as.data.frame(cbind(TID, Lhat, L))
L <- c(0, 1, 0, 1, 1)
p5data <- as.data.frame(cbind(TID, Lhat, L))
p5data
(cm <- table(p5data, p2data$L))
p5data <- cbind(TID, Lhat, L)
(cm <- table(p5data, p2data$L))
p5data <- as.list(cbind(TID, Lhat, L))
p5data
(cm <- table(p5data, p2data$L))
p5data <- as.vector(cbind(TID, Lhat, L))
(cm <- table(p5data, p2data$L))
p5data <- as.vector(TID, Lhat, L)
p5data <- as.vector(c(TID, Lhat, L))
p5data
(cm <- table(p5data, p2data$L))
(cm <- table(p5data, p5data$L))
(cm <- table(p5data))
p5data <- as.data.frame(cbind(TID, Lhat, L))
p5data
(cm <- table(p5data))
(cm <- table(p5data, p5data$L))
(cm <- table(p5data))
L <- c(0, 1, 0, 1, 1)
p5data
cm <􀀀 cor(cars[,c(1,3,4,5,6)],use="complete.obs")
cm <-􀀀 cor(cars[,c(1,3,4,5,6)],use="complete.obs")
install.packages("caret")
library(caret)
confusionMatrix(Lhat,L)
(cm <- table(p5data, p5data$L))
p5data <- as.table(cbind(TID, Lhat, L))
p5data
(cm <- table(p5data, p5data$L))
p5data <- as.matrix(cbind(TID, Lhat, L))
p5data
(cm <- table(p5data, p5data$L))
p5data <- as.matrixTID, Lhat, L)
p5data
(cm <- table(p5data, p5data$L))
p5data <- as.matrix(TID, Lhat, L)
p5data
(cm <- table(p5data, p5data$L))
p5data <- c(TID, Lhat, L)
p5data
(cm <- table(p5data, p5data$L))
p5data <- as.data.frame(cbind.data.frame(TID, Lhat, L))
p5data <- (cbind.data.frame(TID, Lhat, L))
p5data
(cm <- table(p5data, p5data$L))
typeof(p5data)
p5data <- (cbind.data.frame(TID, Lhat, L))
typeof(p5data)
p5data <- (cbind.data.frame(TID, Lhat, L))
p5data <- cbind.data.frame(TID, Lhat, L)
typeof(p5data)
p5data <- as.data.frame(cbind(TID, Lhat, L))
typeof(p5data)
(cm <- table(p5data, p5data$L))
p5data <- as.matrix(cbind(TID, Lhat, L))
p5data
typeof(p5data)
(cm <- table(p5data, p5data$L))
(cm <- table(p5data, p5data$L))
(cm <- table(p5data))
install.packages("caret",
repos = "http://cran.r-project.org",
dependencies = c("Depends", "Imports", "Suggests"))
library(caret)
sessionInfo()
library(lattice)
library(caret)
typeof(p5data$L)
typeof(L)
L <- as.factor(c(0, 1, 0, 1, 1))
Lhat <- as.factor(c(1, 1, 0, 1, 0))
p5data <- as.matrix(cbind(TID, Lhat, L))
p5data
p5data <- as.matrix(cbind(TID, Lhat, L))
typeof(L)
p5data
p5data <- as.matrix(TID, Lhat, L)
p5data
p5data <- as.data.frame(TID, Lhat, L)
p5data <- as.data.frame(cbind(TID, Lhat, L))
p5data
p5data$Lhat <- as.factor(p5data$Lhat)
p5data$L <- as.factor(p5data$L)
p5data
L <- (c(0, 1, 0, 1, 1))
Lhat <- (c(1, 1, 0, 1, 0))
TID <- c(1, 2, 3, 4, 5)
(cm <- table(p5data))
install.packages("lubridate")
library(lubridate)
library(caret)
library(caret)
TID <- c(1, 2, 3, 4, 5)
Lhat <- (c(1, 1, 0, 1, 0))
L <- (c(0, 1, 0, 1, 1))
confusionMatrix(p5data)
confusionMatrix(p5data$Lhat, p5data$L)
table(cm)
cm <- confusionMatrix(p5data$L, p5data$Lhat)
cm
fold <- c(1, 2, 3, 4, 5)
error <- c(19.25, 19.76, 18.99, 19.37, 14.45)
table <- cbind(fold, error)
table
mean(table$error)
df <- as.data.frame(error)
mean(df)
error <- c(19.25, 19.76, 18.99, 19.37, 14.45)
df <- as.data.frame(error)
mean(error)
mean(df[,2])
mean(df[,1])
#or
mean(error)
plot(error)
boxplot(error)
plot(error)
IQR(error)
#or
mean <- mean(error)
mean
mean - error[5]
IQR(error)
mean - error[5]
p9data <- cbind(x1, x2, x3, Y)
Y <- c("Red", "Red", "Red", "Green", "Green", "Red")
p9data <- cbind(x1, x2, x3, Y)
p9data
p9data <- cbind(c(x1, x2, x3, Y))
p9data
x1 <- c(0, 0, 0, 0, -1, 1)
x2 <- c(3, 0, 1, 1, -1, 1)
x3 <- c(0, 0, 3, 2, 1, 1)
Y <- c("Red", "Red", "Red", "Green", "Green", "Red")
p9data <- cbind(c(x1, x2, x3, Y))
p9data
p9data <- as.data.frame(cbind(c(x1, x2, x3, Y)))
p9data
p9data <- as.data.frame(c(x1, x2, x3, Y))
p9data
p9data <- as.data.frame(cbind(x1, x2, x3, Y))
p9data
install.packages("cluster")
install.packages("cluster")
library(cluster)
install.packages("cluster")
install.packages("cluster")
install.packages("cluster")
install.packages("cluster")
knitr::opts_chunk$set(echo = TRUE)
library(cluster)
di <- diana(p9data[,-4], metric='euclidean', stand=TRUE)
cm <- table(di, p9data$4))
cm <- table(di, p9data$Y))
cm <- table(di, p9data$Y)
di3 <- cutree(di, 3)
cm <- table(di3, p9data$Y)
(cm <- table(di3, p9data$Y))
100*(1-sum(diag(cm))/sum(cm))
di <- diana(p9data[,-4], metric='euclidean', stand=FALSE)
di3 <- cutree(di, 3)
(cm <- table(di3, p9data$Y))
100*(1-sum(diag(cm))/sum(cm))
k1 <- knnImputation(p9data, k = 1)
library(DMwR)
k1 <- knnImputation(p9data, k = 1)
library(class)
k1 <- knn(p9data[, -4], k = 1)
k1 <- knn(p9data[1:4, -4], p9data[5:6,-4],k = 1)
k1 <- knn(p9data[1:4, -4], p9data[5:6,-4],p9data[,5], k = 1)
k1 <- knn(p9data[1:4, -4], p9data[5:6,-4],p9data[,4], k = 1)
k1 <- knn(p9data[1:4, -4], p9data[5:6,-4],p9data[1:4,4], k = 1)
table(k1, p9data[, 4])
k1
k1 <- knn(p9data[1:6, -4], p9data[1:6,-4],p9data[1:4,4], k = 1)
k1 <- knn(p9data[1:6, -4], p9data[1:6,-4],p9data[1:6,4], k = 1)
table(k1, p9data[, 4])
k1 <- knn(p9data[1:3, -4], p9data[4:6,-4],p9data[1:3,4], k = 1)
table(k1, p9data[, 4])
table(k1, p9data[1:3, 4])
k3 <- knn(p9data[1:3, -4], p9data[4:6,-4],p9data[1:3,4], k = 3)
table(k3, p9data[1:3, 4])
k3 <- knn(p9data[4:6, -4], p9data[1:3,-4],p9data[4:6,4], k = 3)
table(k3, p9data[4:6, 4])
k1b <- knn(p9data[4:6, -4], p9data[1:3,-4],p9data[4:6,4], k = 1)
table(k1b, p9data[4:6, 4])
library(ISLR)
attach(Carseats)
View(Carseats)
dim(Carseats)
rndSample <- sample(1:nrow(Carseats), 200)
tr <- Carseats[rndSample, ]
ts <- Carseats[-rndSample, ]
rt.a1 <- rpart(Sales ~ ., data = Carseats[,2:11])
library(rpart)
rt.a1 <- rpart(Sales ~ ., data = Carseats[,2:11])
rt.predictions.a1 <- predict(rt.a1, Carseats)
(mse.a1.rt <- mean((rt.predictions.a1 - Carseats[["Sales"]])^2))
library(rpart.plot)
prp(rt.a1,extra=101,box.col="orange",split.box.col="grey")
summary(rt.predictions.at)
summary(rt.predictions.a1)
rt.predictions.a1
printcp(rt.predictions.a1)
printcp(rt.a1)
(mse.a1.rt <- mean((rt.predictions.a1 - Carseats[["Sales"]])^2))
library(randomForest)
DSs <- sapply(names(Carseats)[2:11],
function(x,names.attrs) {
f <- as.formula(paste(x, "~ ."))
PredTask(f, Carseats[,c(names.attrs,x)], x, copy=TRUE)
},
names(Carseats)[2:11])
randomForest(Carseats)
randomForest(Carseats, importance = TRUE)
randomForest(Sales ~ .,data=Carseats, ntree = 500, mtry = 5, importance = TRUE)
(rf <- randomForest(Sales ~ .,data=Carseats, ntree = 500, mtry = 5, importance = TRUE))
imp <- importance(rf)
rf.genes <- rownames(imp)[order(imp[,"MeanDecreaseAccuracy"], decreasing = TRUE)[1:30]]
rf.genes <- rownames(imp)[order(imp[,"MeanDecreaseAccuracy"], decreasing = TRUE)[1:11]]
rf.genes <- rownames(imp), decreasing = TRUE)[1:11]]
rf.genes <- (rownames(imp), decreasing = TRUE)[1:11]]
rf.genes <- (rownames(imp) decreasing = TRUE)[1:11]]
rf.genes <- rownames(imp)
rf.genes
rf.genes <- rownames(imp)[order(imp[,"MeanDecreaseAccuracy"], decreasing = TRUE)[1:30]]
rf.genes <- rownames(imp)[order(imp[,"MeanDecreaseAccuracy"], decreasing = TRUE)[1:8]]
rf.genes <- rownames(imp)[order(imp[,"MeanDecreaseAccuracy"], decreasing = TRUE)[1:5]]
imp <- importance(rf)
rf.genes <- rownames(imp)[order(imp[,"MeanDecreaseAccuracy"], decreasing = TRUE)[1:5]]
imp
rt.a1 <- rpart(Sales ~ ., data = tr[,2:11])
rt.a1 <- rpart(Sales ~ ., data = tr[,2:11])
rndSample <- sample(1:nrow(Carseats), 200)
tr <- Carseats[rndSample, ]
ts <- Carseats[-rndSample, ]
rt.a1 <- rpart(Sales ~ ., data = tr[,2:11])
rt.a1 <- rpart(Sales ~ ., data = tr[, 2:11]
rt.predictions.a1 <- predict(rt.a1, tr)
rt.a1 <- rpart(Sales ~ ., data = tr[, 2:11])
rt.a1 <- rpart(Sales ~ ., data = Carseats[, 2:11])
rt.a1 <- rpart(Sales ~ ., data = tr[, 2:11])
rndSample <- sample(1:nrow(Carseats), 200)
tr <- Carseats[rndSample, ]
tr
rt.a1 <- rpart(Sales ~ ., data = tr[, 2:11])
rt.a1 <- rpart(Sales ~ ., data = tr[, 1:11])
rt.a1 <- rpart(Sales ~ ., data = tr[, 2:11])
tr <- Carseats[rndSample, 2:11]
ts <- Carseats[-rndSample, 2:11]
rt.a1 <- rpart(Sales ~ ., data = tr)
tr <- Carseats[rndSample]
tr <- Carseats[rndSample, ]
ts <- Carseats[-rndSample, ]
rt.a1 <- rpart(Sales ~ ., data = tr)
rt.a1 <- rpart(Sales ~ ., data = tr[3:11])
rt.a1 <- rpart(Sales ~ ., data = tr[1:11])
rt.predictions.a1 <- predict(rt.a1, tr)
printcp(rt.a1)
printcp(rt.a1)
(mse.a1.rt <- mean((rt.predictions.a1 - Carseats[["Sales"]])^2))
rt.a1 <- rpart(Sales ~ ., data = tr[2:11])
rt.a1 <- rpart(Sales ~ ., data = tr[1:11])
rt.predictions.a1 <- predict(rt.a1, tr)
prp(rt.a1,extra=101,box.col="orange",split.box.col="grey")
printcp(rt.a1)
rt.a1 <- rpart(Sales ~ ., data = tr[1:11])
rt.a1 <- rpart(Sales ~ ., data = tr[2:11])
rt.a1 <- rpart(Sales ~ ., data = Carseats[2:11])
install.packages("cluster")
install.packages("cluster")
(mse.a1.rt <- mean((rt.predictions.a1 - Carseats["Sales"])^2))
library(DMwR2)
library(rpart.plot)
library(e1071)
library(ggplot2)
set.seed(1234)
p2ab <- p2data[,1:2,4]
ggplot(p2ab,aes(x=b,y=a, color=d)) + geom_point() + guides(color=FALSE)
svm_model <- svm(d ~ ., p2data, kernel='linear')
ps <- predict(svm_model, p2data)
(cm <- table(ps, p2data$d))
install.packages("cluster")
library(cluster)
di <- diana(p9data[,-4], metric='euclidean', stand=FALSE)
di3 <- cutree(di, 3)
(cm <- table(di3, p9data$Y))
100*(1-sum(diag(cm))/sum(cm))
install.packages("cluster")
library(class)
k1 <- knn(p9data[1:3, -4], p9data[4:6,-4],p9data[1:3,4], k = 1)
table(k1, p9data[1:3, 4])
library(class)
k3 <- knn(p9data[4:6, -4], p9data[1:3,-4],p9data[4:6,4], k = 3)
table(k3, p9data[4:6, 4])
k1b <- knn(p9data[4:6, -4], p9data[1:3,-4],p9data[4:6,4], k = 1)
table(k1b, p9data[4:6, 4])
library(ISLR)
attach(Carseats)
View(Carseats)
dim(Carseats)
rndSample <- sample(1:nrow(Carseats), 200)
tr <- Carseats[rndSample, ]
ts <- Carseats[-rndSample, ]
library(rpart)
library(rpart.plot)
rt.a1 <- rpart(Sales ~ ., data = Carseats[2:11])
rt.predictions.a1 <- predict(rt.a1, tr)
prp(rt.a1,extra=101,box.col="orange",split.box.col="grey")
printcp(rt.a1)
mse.a1.rt <- mean(rt.predictions.a1 - Carseats["Sales"])^2
library(randomForest)
(rf <- randomForest(Sales ~ .,data=Carseats, ntree = 500, mtry = 5, importance = TRUE))
imp <- importance(rf)
imp
knit_with_parameters('C:/Users/khickman/Desktop/Personal/IUMSDS/AppliedDataMining/Final/final.Rmd')
devtools::install_github("rstudio/rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
a <- c(1, 2, 1, 3, 0, 4, 1)
b <- c(2, 3, 2, 1, 0, 1, 1)
c <- c("m", "m", "p", "p", "a", "m", "m")
d <- c(1, 1, 0, 1, 0, 1, 0)
p2data <- as.data.frame(cbind(a, b, c, d))
p2data
library(CORElearn)
attrEval(d ~ ., p2data, estimator="GainRatio")
attrEval(d ~ ., p2data, estimator="Gini")
attrEval(d ~ ., p2data, estimator="InfGain")
library(DMwR2)
library(rpart.plot)
library(e1071)
library(ggplot2)
set.seed(1234)
p2ab <- p2data[,1:2,4]
ggplot(p2ab,aes(x=b,y=a, color=d)) + geom_point() + guides(color=FALSE)
svm_model <- svm(d ~ ., p2data, kernel='linear')
ps <- predict(svm_model, p2data)
(cm <- table(ps, p2data$d))
tree <- rpartXse(d ~ ., p2data)
prp(tree, type=0, extra=101)
2/5
library(caret)
TID <- c(1, 2, 3, 4, 5)
Lhat <- (c(1, 1, 0, 1, 0))
L <- (c(0, 1, 0, 1, 1))
p5data <- as.data.frame(cbind(TID, Lhat, L))
p5data$Lhat <- as.factor(p5data$Lhat)
p5data$L <- as.factor(p5data$L)
p5data
cm <- confusionMatrix(p5data$L, p5data$Lhat)
cm
error <- c(19.25, 19.76, 18.99, 19.37, 14.45)
df <- as.data.frame(error)
mean(df[,1])
#or
mean <- mean(error)
mean
plot(error)
IQR(error)
mean - error[5]
x1 <- c(0, 0, 0, 0, -1, 1)
x2 <- c(3, 0, 1, 1, -1, 1)
x3 <- c(0, 0, 3, 2, 1, 1)
Y <- c("Red", "Red", "Red", "Green", "Green", "Red")
p9data <- as.data.frame(cbind(x1, x2, x3, Y))
p9data
#install.packages("cluster")
library(cluster)
di <- diana(p9data[,-4], metric='euclidean', stand=FALSE)
di3 <- cutree(di, 3)
(cm <- table(di3, p9data$Y))
100*(1-sum(diag(cm))/sum(cm))
library(class)
k1 <- knn(p9data[1:3, -4], p9data[4:6,-4],p9data[1:3,4], k = 1)
table(k1, p9data[1:3, 4])
library(class)
k3 <- knn(p9data[4:6, -4], p9data[1:3,-4],p9data[4:6,4], k = 3)
table(k3, p9data[4:6, 4])
k1b <- knn(p9data[4:6, -4], p9data[1:3,-4],p9data[4:6,4], k = 1)
table(k1b, p9data[4:6, 4])
library(ISLR)
attach(Carseats)
## View(Carseats)
dim(Carseats)
rndSample <- sample(1:nrow(Carseats), 200)
tr <- Carseats[rndSample, ]
ts <- Carseats[-rndSample, ]
library(rpart)
library(rpart.plot)
rt.a1 <- rpart(Sales ~ ., data = Carseats[2:11])
rt.predictions.a1 <- predict(rt.a1, tr)
prp(rt.a1,extra=101,box.col="orange",split.box.col="grey")
printcp(rt.a1)
mse.a1.rt <- mean(rt.predictions.a1 - Carseats["Sales"])^2
library(randomForest)
(rf <- randomForest(Sales ~ .,data=Carseats, ntree = 500, mtry = 5, importance = TRUE))
imp <- importance(rf)
imp
