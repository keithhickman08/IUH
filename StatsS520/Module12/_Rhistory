t.test(old_movies, new_movies)
t.test(log_new, log_old)
t.test(log_old, log_new)
plot(density(log_old))
plot(density(log_new))
plot(density(log_old))
q = qt(0.975, df = p3.nu)
lower = p3delta_hat - q * se
upper = p3delta_hat + q * se
lower
lower = exp(p3delta_hat) - q * se
upper = exp(p3delta_hat) + q * se
lower
upper
t.test(log_normal, log_diabetic)
t.test(log.normal, log.diabetic)
lower
upper
lower = p3delta_hat - q * p3.se
upper = p3delta_hat + q * p3.se
lower
upper
exp(c(-.22535, .06596344))
ages <- c(18, 13, 18, 16, 12, 16, 17, 17, 20, 18)
x_bar <- mean(ages)
x_bar
s <- sd(ages)
p <- x_bar - 16/(s/sqrt(10))
p
p <- x_bar - 16/(s/sqrt(length(ages)))
p
x_bar
pnorm(p,mean(ages),s)
pnorm(p)
s
p <- (x_bar - 16)/(s/sqrt(length(ages)))
p
pnorm(p)
delta.hat = 5.790 - 5.87
std.error = sqrt(var(TypeA)/20 + var(TypeB)/20)
std.error = sqrt(11.82893/18 + 12.54725/18)
std.error
Tw <- delta.hat/std.error
Tw
waves <- read.csv("c:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\waves.txt")
method1 <- waves[1:18]
method1 <- waves[,1:18]
method1 <- waves[1:18,]
method2 <- waves[19:48]
method2 <- waves[19:48,]
summary(method1)
summary(method2)
method2 <- waves[19:38,]
summary(method2)
method2 <- waves[19:36,]
summary(method1)
summary(method2)
method2 <- waves[19:35,]
summary(method2)
delta.hat <- mean(method1) - mean(method2)
delta.hat
std.error <- sqrt(var(method1)/18 + var(method2)/18)
std.error
var(method1)
summary(method1)
method1
method1 <- waves[0:18,]
method2 <- waves[19:35,]
method1
waves <- read.csv("c:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\waves.txt", header=FALSE)
method1 <- waves[0:18,]
method1
summary(method1)
summary(method2)
method2
method1 <- waves[0:17,]
method1
length(method1)
method1 <- waves[0:18,]
method2 <- waves[19:35,]
summary(method1)
summary(method2)
method2 <- waves[19:36,]
method2
summary(method2)
delta.hat <- mean(method1) - mean(method2)
delta.hat
var(method1)
df <- (var(method1)/18+var(method2)/18)^2 / ((var(method1)/18)^2/17 + (var(method2)/18)^2/17)
df
2 * pt(Tw, df)
p.value <- 2 * pt(Tw, df)
p.value
conf_upper <- (mean(method2) - (method1)) + qr(.975, df)
conf_upper <- (mean(method2) - (method1)) + qt(.975, df)*std.error
conf_upper <- (mean(method2) - mean(method1)) + qt(.975, df)* std.error
conf_lower <- (mean(method2) - mean(method1)) - qt(.975, df)* std.error
conf_upper
conf_lower
conf_upper
Tw
delta.hat <- mean(method2) - mean(method1)
delta.hat
std.error <- sqrt(var(method1)/18 + var(method2)/18)
std.error
std.error
t.test(method1, method2)
t.test(method2, method1)
t.test(method2, method1)
t.test(method2, method1, alt="greater")
knitr::opts_chunk$set(echo = TRUE)
t <- mu.1 - mu.0 / (s/sqrt(n))
t
n = 16
s = .2
mu.0 = 8
mu.1 = 8.1
t <- mu.1 - mu.0 / (s/sqrt(n))
t
t <- (mu.1 - mu.0) / sqrt(s/sqrt(n))
t
1-pnorm(t)
t <- (mu.1 - mu.0) / (s/sqrt(n))
t
1-pnorm(t)
t <- 41/80
1 - pbinom(t)
1 - pbinom(t, 80)
1 - pbinom(t, 40, 80)
1 - pbinom(40, 80, t)
1 - pbinom(41, 80, .5)
1 - pbinom(40, 80, t)
1 - pbinom(41,80,.5)
1 - pbinom(50,80,.5)
1 - pbinom(70,80,.5)
1 - pbinom(41,80,.5)
1 - pbinom(40, 80, .5)
1 - pbinom(41, 80, .5)
1 - dbinom(41, 80, .5)
1 - dbinom(40, 80, .5)
1 - pbinom(41, 80, .5)
rainfall <- scan(file.choose("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\snoqualmie14.txt"))
rainfall <- scan(file.choose("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\snoqualmie14.txt"))
summary(rainfall)
qqnorm(rainfall)
rainfall <- scan(file.choose("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\snoqualmie14.txt"))
summary(rainfall)
qqnorm(rainfall)
plot(density(rainfall))
qqnorm(rainfall)
plot(density(rainfall))
2 * (1-dbinom(40, 80, .5))
2 * (dbinom(40, 80, .5))
rainfall <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\snoqualmie14.txt"))
rainfall <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\snoqualmie14.txt")
summary(rainfall)
qqnorm(rainfall)
qqnorm(rainfall[,0])
qqnorm(rainfall[,1])
rainfall <- rainfall[1]
summary(rainfall)
qqnorm(rainfall)
qqnorm(rainfall[,1])
plot(density(rainfall))
plot(density(rainfall[,1]))
knitr::opts_chunk$set(echo = TRUE)
2 * (1 - dbinom(40, 80, .5))
2 * (dbinom(40, 80, .5))
mean.sno <- mean(rainfall)
mean.sno <- mean(rainfall[,1])
mean.sno
mean.seattle
mean.seattle <- 37.7
mean.seattle - mean.sno
sd.sno <- sd(rainfall[,1])
sd.sno
s3.sno <- sd(rainfall[,1]/sqrt(length(rainfall[,1])))
sd.sno
qqnorm(rainfall[,1])
mean.sno
mean.seattle
p <- 2.074 / 4.247
p
p <- (2.074 / 4.247) * 100
p
1 - pbinom(2074000, 4247000, .5)
pbinom(2074000, 4247000, .5)
pbinom(2074000, 4247000, .48)
pbinom(2074000, 4247000, .5)
dbinom(2074000, 4247000, .5)
dbinom(2074000, 4247000, .48)
pbinom(2074000, 4247000, .48)
pbinom(2074000, 4247000, .50)
pbinom(2074000, 4247000, .47)
pbinom(2074000, 4247000, .51)
pbinom(2074000, 4247000, .5)
sd.sno <- sd(rainfall[,1]/sqrt(length(rainfall[,1])))
sd.sno
1 - pbinom(40, 80, .5)
p - qnorm(.975) * sqrt(p * (1 - p)) / sqrt(4247000)
p <- .48883
p - qnorm(.975) * sqrt(p * (1 - p)) / sqrt(4247000)
p + qnorm(.975) * sqrt(p * (1 - p)) / sqrt(4247000)
upper_bound <- p - qnorm(.975) * sqrt(p * (1 - p)) / sqrt(4247000)
lower_bound <- p + qnorm(.975) * sqrt(p * (1 - p)) / sqrt(4247000)
upper_bound
lower_bound
lower_bound <- p - qnorm(.975) * sqrt(p * (1 - p)) / sqrt(4247000)
upper_bound <- p + qnorm(.975) * sqrt(p * (1 - p)) / sqrt(4247000)
upper_bound
lower_bound
upper_bound
rainfall <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\snoqualmie14.txt")
## I used read.csv because everytime I knit to PDF, r markdown asks me to choose the file.
rainfall <- rainfall[1]
summary(rainfall)
p5.p <- .894
lower_bound <- p5.p - qnorm(.975) * sqrt(p5.p * (1 - p5.p)) / sqrt(4247000)
upper_bound <- p5.p + qnorm(.975) * sqrt(p5.p * (1 - p5.p)) / sqrt(4247000)
upper_bound
lower_bound
upper_bound
lower_bound
upper_bound
p5.in <- .894
lower_bound <- p5.in - qnorm(.975) * sqrt(p5.in * (1 - p5.in)) / sqrt(4247000)
upper_bound <- p5.in + qnorm(.975) * sqrt(p5.in * (1 - p5.in)) / sqrt(4247000)
upper_bound
lower_bound
p5.out <- .48883
lower_bound <- p5.out - qnorm(.975) * sqrt(p5.out * (1 - p5.out)) / sqrt(4247000)
upper_bound <- p5.out + qnorm(.975) * sqrt(p5.out * (1 - p5.out)) / sqrt(4247000)
upper_bound
lower_bound
p5.out <- .925
lower_bound <- p5.out - qnorm(.975) * sqrt(p5.out * (1 - p5.out)) / sqrt(4247000)
upper_bound <- p5.out + qnorm(.975) * sqrt(p5.out * (1 - p5.out)) / sqrt(4247000)
upper_bound
lower_bound
upper_bound
train <- read.csv("C:Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\train.csv")
train <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\train.csv")
test <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\test.csv")
summary(train)
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
numeric_var <- names(train)[which(sapply(train, is.numeric))]
summary(cat_var)
cat_var <- names(train)[which(sapply(train, is.character))]
summary(cat_var)
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
summary(cat_car)
summary(numeric_var)
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
numeric_var <- names(train)[which(sapply(train, is.numeric))]
summary(cat_var)
summary(cat_car)
summary(numeric_var)
head(cat_var)
summary(train)
str(train)
summary(numeric_var)
str(train)
summary(train)
cat_var <- names(train)[which(sapply(train, is.character))]
summary(cat_car)
train <- fread("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\train.csv")
library(data.table)
train <- fread("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\train.csv")
summary(train)
str(train)
cat_var <- names(train)[which(sapply(train, is.character))]
summary(cat_car)
cat_var <- names(train)[which(sapply(train, is.character))]
summary(cat_var)
summary(numeric_var)
numeric_var <- names(train)[which(sapply(train, is.numeric))]
summary(numeric_var)
cat_car <- c(cat_var, 'OverallQual','GarageCars','MoSold','YrSold','GarageYrBlt','Fireplaces','BsmtFullBath','BsmtHalfBath','FullBath','HalfBath','BedroomAbvGr','MSSubClass')
summary(cat_car)
head(cat_var)
head(cat_car)
test <- fread("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\test.csv")
View(test)
View(train)
summary(cat_car)
summary(numeric_var)
summary(train)
summary(numeric_var)
summary(numeric_var)
??names
library(DMwR2)
train$OverallQual <- as.factor(train$OverallQual)
summary(train$OverallQual)
str(train$OverallQual)
cat_var <- names(train)[which(sapply(train, is.character))]
summary(cat_var)
cat_car <- c(cat_var, 'OverallQual','GarageCars','MoSold','YrSold','GarageYrBlt','Fireplaces','BsmtFullBath','BsmtHalfBath','FullBath','HalfBath','BedroomAbvGr','MSSubClass')
summary(cat_car)
numeric_var <- names(train)[which(sapply(train, is.numeric))]
summary(numeric_var)
?princomp
?prcomp
library(ggplot2)
train <- fread("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\train.csv")
test <- fread("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\AppliedDataMining\\HW6\\test.csv")
summary(train)
str(train)
head(cat_car)
str(cat_car)
Missing_indices <- sapply(train,function(x)sum(is.na(x)))
Missing_Summary <- data.frame(index = names(train),Missing_Values=Missing_indices)
Missing_Summary[Missing_Summary$Missing_Values > 0,]
View(test)
View(train)
train$Alley[which(is.na(train$Alley))] <- "None"
table(train$Alley)
train$OverallQual[which(is.na(train$OverallQual))] <- "None"
train$GarageCars[which(is.na(train$GarageCars))] <- "None"
train$MoSold[which(is.na(train$MoSold))] <- "None"
train$YrSold[which(is.na(train$YrSold))] <- "None"
train$GarageYrBlt[which(is.na(train$GarageYrBuilt))] <- "None"
train$Fireplaces[which(is.na(train$Fireplaces))] <- "None"
train$BsmtFullBath[which(is.na(train$BsmtFullBath))] <- "None"
table(BsmtFullBath)
table(train$BsmtFullBath)
train$BsmtHalfBath[which(is.na(train$BsmtHalfBath))] <- "None"
train$FullBath[which(is.na(train$FullBath))] <- "None"
table(FullBath)
table(train$FullBath)
train$HalfBath[which(is.na(train$HalfBath))] <- "None"
train$BedroomAbvGr[which(is.na(train$BedroomAbvGr))] <- "None"
train$KitchenAbvGr[which(is.na(train$KitchenAbvGr))] <- "None"
train$GarageCond[which(is.na(train$GarageCond))] <- "None"
train$GarageCond[which(is.na(train$GarageCond))] <- "None"
train$GarageYrBlt[which(is.na(train$GarageYrBuilt))] <- "None"
train$GarageType[which(is.na(train$FullBath))] <- "None"
train$GarageCars[which(is.na(train$GarageCars))] <- "None"
train$GarageType[which(is.na(train$GarageType))] <- "None"
train$GarageCars[which(is.na(train$GarageCars))] <- "None"
train$GarageFinish[which(is.na(train$GarageFinish))] <- "None"
train$GarageQual[which(is.na(train$GarageQual))] <- "None"
radishes <- read.csv("C:\Users\khickman\Desktop\Personal\IUMSDS\StatsS520\Module12")
radishes <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12")
radishes <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\radishes.csv")
radishes
n = length(radishes)
radishes$difference <- radishes$Old - radishes$Young
plot(density(radishes$difference))
plot(density(radishes$difference, xlab="Differences", main="Density Kernel for Difference"))
plot(density(radishes$difference, main="Density Kernel for Difference"))
plot(density(radishes$difference),main="Density Kernel for Difference")
plot(density(radishes$difference),main="Density Kernel of Differences")
log_diff <- log(radishes$difference)
log_diff
radishes$difference <- radishes$Old - radishes$Young
plot(density(radishes$difference),main="Density Kernel of Differences")
log_diff <- log(radishes$difference)
log_diff
log_diff <- log(radishes)
log_diff <- log(radishes$difference)
log_diff <- log(radishes$Old)
log_diff
log_diff <- log(radishes$Old) - log(radishes$Young)
log_diff
plot(density(log_diff)
plot(density(log_diff))
plot(density(log_diff))
rad_ratio <- radishes$Old / radishes$Young
rad_ratio
plot(density(rad_ratio))
rad_n = length(radishes)
upper_rad <- mean(rad_ratio) + qnorm(.95) * sqrt(p5.out * (1 - p5.out)) / sqrt(rad_n)
lower_rad <- mean(rad_ratio) - qnorm(.95) * sd(rad_ratio) / sqrt(rad_n)
upper_rad <- mean(rad_ratio) + qnorm(.95) * sd(rad_ratio) / sqrt(rad_n)
lower_rad
upper_rad
mean(rad_ratio)
lower_rad
upper_rad
lower_rad
upper_rad
lower_rad
upper_rad
getwd()
setwd("C:/Users/khickman/Desktop/Personal/IUMSDS/StatsS520/Module12")
list()
currydist <- read.csv("currydist.csv")
summary(currydis)
summary(currydist)
str(currydist)
currydist$distHome <- currydist$distance[currydist$venue=="Home"]
currydistHome <- currydist$distance[currydist$venue=="Home"]
currydistAway <- currydist$distance[currydist$venue=="Away"]
summary(currydistHome)
summary(currydistAway)
Home <- currydist$distance[currydist$venue=="Home"]
Away <- currydist$distance[currydist$venue=="Away"]
summary(Home)
summary(Away)
qqnorm(Home)
qqnorm(Away)
qqnorm(Home)
qqnorm(Away)
plot(density(Home))
plot(density(Away))
Diff <- Home - Away
length(Home)
lenth(Away)
length(Away)
diff <- mean(Home) - mean(Away)
diff
curry_n = length(currydist)
curry_n
currydist <- read.csv("currydist.csv")
summary(currydist)
str(currydist)
curry_n = length(currydist)
curry_n
rad_n
radishes
lower_rad <- mean(rad_ratio) - qnorm(.95) * sd(rad_ratio) / sqrt(11)
upper_rad <- mean(rad_ratio) + qnorm(.95) * sd(rad_ratio) / sqrt(11)
lower_rad
upper_rad
lower_rad
qqnorm(Home)
qqnorm(Away)
Home <- currydist$distance[currydist$venue=="Home"]
Away <- currydist$distance[currydist$venue=="Away"]
qqnorm(Home)
qqnorm(Away)
summary(Home)
summary(Away)
plot(density(Home))
plot(density(Away))
t.test(Home,AWay)
Away <- currydist$distance[currydist$venue=="Away"]
t.test(Home,AWay)
t.test(Home,Away)
t.test(Home,Away)
p6delta.hat
p6delta.hat <- mean(Home) - mean(Away)
p6delta.hat
n1 <- length(Home)
n1
n2 <- length(Away)
std.error <- sqrt(s1^2/n1 + s2^2/n2) ^2 / ((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
s1 <- sd(Home)
s2 <- sd(Away)
n1 <- length(Home)
n2 <- length(Away)
std.error <- sqrt(s1^2/n1 + s2^2/n2) ^2 / ((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
std.error
std.error <- sqrt(s1^2/n1 + s2^2/n2)
p7delta.hat <- mean(Home) - mean(Away)
p7delta.hat
Tstat <- p7delta.hat/std.error
Tstat
p7df <- sqrt(s1^2/n1 + s2^2/n2) ^2 / ((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
p7df
p7df <- (s1^2/n1 + s2^2/n2) ^2 / ((s1^2/n1)^2/(n1-1) + (s2^2/n2)^2/(n2-1))
p7df
Tstat
1 - pt(Tstat, p7df)
2 *(1 - pt(abs(Tstat), p7df)
2 * (1 - pt(abs(Tstat), p7df)
2 * (1 - pt(abs(Tstat), p7df))
p7upper <- p7delta.hat + qt(0.95, df=p7df) * std.error
p7lower <- p7delta.hat - qt(0.95, df=p7df) * std.error
p7upper
p7lower
p7upper
p7upper <- p7delta.hat + qt(0.90, df=p7df) * std.error
p7lower <- p7delta.hat - qt(0.90, df=p7df) * std.error
p7upper
p7lower
rainfall <- read.csv("C:\\Users\\khickman\\Desktop\\Personal\\IUMSDS\\StatsS520\\Module12\\snoqualmie14.txt")
## I used read.csv because everytime I knit to PDF, r markdown asks me to choose the file.
rainfall <- rainfall[1]
summary(rainfall)
qqnorm(rainfall[,1])
plot(density(rainfall[,1]))
mean.sno
mean.seattle <- 37.7
mean.sno <- mean(rainfall[,1])
sd.sno <- sd(rainfall[,1]/sqrt(length(rainfall[,1])))
sd.sno
mean.seattle
mean.sno
delta.hat <- mean.seattle - mean.sno
delta.hat
??pt
se.sno <- sd(rainfall[,1]/sqrt(length(rainfall[,1])))
se.sno
t.statistic = function(n, mu = 0, sigma = 1)
{my.sample = rnorm(n, mu, sigma)
x.bar = mean(rainfall)
s = sd(rainfall)
t = (mean(rainfall) - mu)/(s/sqrt(n))
return(t)}
t.statistic(365, 0, 1)
t.statistic(365)
t.statistic
mean.sno <- mean(rainfall[,1])
mean.sno
n <- length(rainfall[,1])
n
t.stat <- (mean.sno - 0) / sd(rainfall[,1])/sqrt(364)
t.stat
1 - pt(t.stat, n-1)
